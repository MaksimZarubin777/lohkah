{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._options = options;\n    this._baseUrl = this._options.baseUrl;\n    this._headers = this._options.headers;\n  }\n  _getResponseData(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Error: ${res.status}`);\n  }\n  login(name, password) {\n    console.log('api test', name, password);\n    return fetch(`${this._baseUrl}/signin`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        password\n      }),\n      credentials: 'include'\n    }).then(res => this._getResponseData(res));\n  }\n  register(name, department, password, confirmation) {\n    return fetch(`${this._baseUrl}/signup`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        department,\n        password,\n        confirmation\n      }),\n      credentials: 'include'\n    }).then(res => this._getResponseData(res));\n  }\n}\nconst MainApi = new Api({\n  baseUrl: 'http://localhost:3000'\n});\nexport default MainApi;","map":{"version":3,"names":["Api","constructor","options","_options","_baseUrl","baseUrl","_headers","headers","_getResponseData","res","ok","json","Promise","reject","status","login","name","password","console","log","fetch","method","body","JSON","stringify","credentials","then","register","department","confirmation","Accept","MainApi"],"sources":["/Users/maksim/Desktop/dev/lohkah/frontend/src/utils/MainApi.js"],"sourcesContent":["class Api {\n  constructor(options) {\n    this._options = options;\n    this._baseUrl = this._options.baseUrl;\n    this._headers = this._options.headers;\n  }\n\n  _getResponseData(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Error: ${res.status}`);\n  }\n\n  login(name, password) {\n    console.log('api test', name, password)\n    return fetch(`${this._baseUrl}/signin`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        name,\n        password,\n      }),\n      credentials: 'include',\n    })\n      .then((res) => this._getResponseData(res));\n  }\n\n  register(name, department, password, confirmation) {\n    return fetch(`${this._baseUrl}/signup`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify( {name, department, password, confirmation} ),\n      credentials: 'include',\n    })\n    .then((res) => this._getResponseData(res))\n  }\n}\n\nconst MainApi = new Api({\n  baseUrl: 'http://localhost:3000'\n});\n\nexport default MainApi;\n\n"],"mappings":"AAAA,MAAMA,GAAG,CAAC;EACRC,WAAWA,CAACC,OAAO,EAAE;IACnB,IAAI,CAACC,QAAQ,GAAGD,OAAO;IACvB,IAAI,CAACE,QAAQ,GAAG,IAAI,CAACD,QAAQ,CAACE,OAAO;IACrC,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACH,QAAQ,CAACI,OAAO;EACvC;EAEAC,gBAAgBA,CAACC,GAAG,EAAE;IACpB,IAAIA,GAAG,CAACC,EAAE,EAAE;MACV,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;IACnB;IACA,OAAOC,OAAO,CAACC,MAAM,CAAE,UAASJ,GAAG,CAACK,MAAO,EAAC,CAAC;EAC/C;EAEAC,KAAKA,CAACC,IAAI,EAAEC,QAAQ,EAAE;IACpBC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEH,IAAI,EAAEC,QAAQ,CAAC;IACvC,OAAOG,KAAK,CAAE,GAAE,IAAI,CAAChB,QAAS,SAAQ,EAAE;MACtCiB,MAAM,EAAE,MAAM;MACdd,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/Ce,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBR,IAAI;QACJC;MACF,CAAC,CAAC;MACFQ,WAAW,EAAE;IACf,CAAC,CAAC,CACCC,IAAI,CAAEjB,GAAG,IAAK,IAAI,CAACD,gBAAgB,CAACC,GAAG,CAAC,CAAC;EAC9C;EAEAkB,QAAQA,CAACX,IAAI,EAAEY,UAAU,EAAEX,QAAQ,EAAEY,YAAY,EAAE;IACjD,OAAOT,KAAK,CAAE,GAAE,IAAI,CAAChB,QAAS,SAAQ,EAAE;MACtCiB,MAAM,EAAE,MAAM;MACdd,OAAO,EAAE;QACPuB,MAAM,EAAE,kBAAkB;QAC1B,cAAc,EAAE;MAClB,CAAC;MACDR,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAE;QAACR,IAAI;QAAEY,UAAU;QAAEX,QAAQ;QAAEY;MAAY,CAAE,CAAC;MAClEJ,WAAW,EAAE;IACf,CAAC,CAAC,CACDC,IAAI,CAAEjB,GAAG,IAAK,IAAI,CAACD,gBAAgB,CAACC,GAAG,CAAC,CAAC;EAC5C;AACF;AAEA,MAAMsB,OAAO,GAAG,IAAI/B,GAAG,CAAC;EACtBK,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,eAAe0B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}